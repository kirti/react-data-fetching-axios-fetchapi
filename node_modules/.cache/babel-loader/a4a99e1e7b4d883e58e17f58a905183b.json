{"ast":null,"code":"var _jsxFileName = \"/Users/sunnykirtitoffu/Documents/whitelabel/medium/react-data-fetching-axios-fetchapi/src/ErrorBoundary.js\";\nimport React from 'react';\nimport ErrorFallback from './ErrorFallback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(ErrorFallback, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/Users/sunnykirtitoffu/Documents/whitelabel/medium/react-data-fetching-axios-fetchapi/src/ErrorBoundary.js"],"names":["React","ErrorFallback","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","logErrorToMyService","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,OAAO,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAE8B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;AAClC;AACAC,IAAAA,mBAAmB,CAACH,KAAD,EAAQE,SAAR,CAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACD;;AAvB8C","sourcesContent":["import React from 'react'\nimport ErrorFallback from './ErrorFallback'\n\n\nexport class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error, errorInfo) {\n      // You can also log the error to an error reporting service\n      logErrorToMyService(error, errorInfo);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <ErrorFallback></ErrorFallback>;\n      }\n  \n      return this.props.children; \n    }\n  }\n "]},"metadata":{},"sourceType":"module"}